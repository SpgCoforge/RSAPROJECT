name: Build External Node.js Project with SonarCloud and Docker

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code from Repo 1
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install dependencies
        run: |
          cd nodejs-hello-world
          npm install

      - name: Run tests (optional)
        run: |
          cd nodejs-hello-world
          npm test || echo "No tests available"

     
      - name: Create output folder and copy files
        run: |
          mkdir -p dist
          cp -r nodejs-hello-world/* dist/

      - name: Upload built package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: nodejs-hello-world-artifact
          path: dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}


      - name: Login AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
       
      - name: Build and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run:  |  
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./nodejs-hello-world
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Fill in the new image ID in the ECS task definition         
        id: task-def         
        uses: aws-actions/amazon-ecs-render-task-definition@v1         
        with:           
          task-definition: ${{ secrets.ECS_TASK_DEFINITION }}           
          container-name: ${{ secrets.ECR_REPOSITORY }}           
          image: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}        

      - name: Deploy ECS task definition         
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1         
        with:           
          task-definition: ${{ steps.task-def.outputs.task-definition }}           
          service: ${{ secrets.ECS_SERVICE }}           
          cluster: ${{ secrets.ECS_CLUSTER }}           
          wait-for-service-stability: true
